#labels Featured
= Quick start =

For more detailed information about standard GCM, see the 

  # Complete step 1, 2 and 3 in the [http://developer.android.com/google/gcm/gs.html GCM:Getting Started] guide.
  # To automatically generate the required xml-tags in the `AndroidManifest.xml` file, either use the [http://code.google.com/p/gcmutils/wiki/ManifestGenerator#1._Maven_plugin gcmutils-maven-plugin] or [http://code.google.com/p/gcmutils/wiki/ManifestGenerator#2._Java_application download and run the Java application].
  # [https://code.google.com/p/gcmutils/downloads/list Download jar-files] (gcm-client-utils and gcm-common-utils) or [https://code.google.com/p/gcmutils/wiki/ProjectSetup add them to your pom.xml].
  # In your main activity, add the following code:
{{{
GCMRegistrar.checkDevice(this);
GCMUtils.checkExtended(this);
GCMUtils.getAndSendRegistrationId(this);
}}}
  # Add _gcmutils.properties_ in the assets folder and add the _receiver-url_, sender-id and check-extended:
{{{
# Required
receiver-url=
sender-id=

# optional
# values: enabled/disabled
check-extended=enabled
}}}
  # Create a GCMIntentService class and extend GCMUtilsBaseIntentService. Implement the onMessage and onError methods (if you need custom behavior you can also override the onRegistered method).
{{{
public class GCMIntentService extends GCMUtilsBaseIntentService {
  @Override
  protected void onMessage(Context context, String msg) {
    Log.i(TAG, "Message received: " + msg);
  }

  @Override
  protected void onError(Context context, String error) {
    Log.e(TAG, "onError: " + error);
  }
}
}}}
  # Implement a server that can receive registration ids and send messages (see [http://developer.android.com/google/gcm/gs.html#server-app GCM: Getting Started guide] for more info).
The default request parameters have the following format (key=value):
  * regId=_`[`registration id`]`_
  * unregId=_`[`registration id`]`_
<br/>
*(Server code) receive registration id example:*
{{{
@Override
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
  String regIdParam = request.getParameter(GCMUtilsConstants.PARAM_KEY_REGID);
  String unregIdParam = request.getParameter(GCMUtilsConstants.PARAM_KEY_UNREGID);
  if (regIdParam != null) {
    logger.info("Received registration id: {}", regIdParam);
  }
}
}}}

*(Server code) send msg example:*
{{{
Sender sender = new Sender(apiKey);
Message message = new Message.Builder().addData(GCMUtilsConstants.DATA_KEY_MSG, msg).build();
Result result = sender.send(message, regId, 0);
logger.info("Push message result: {}", result);
}}}

For more information, see the [https://code.google.com/p/gcmutils/wiki/Features features page].